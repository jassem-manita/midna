name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        exclude:
          - os: macos-latest
            python-version: "3.6"
          - os: macos-latest
            python-version: "3.7"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov build twine
          pip install -e .

      - name: Test package installation
        run: zap --version

      - name: Run tests
        run: pytest tests/ -v --cov=zap

      - name: Test CLI functionality
        run: |
          zap --help
          echo "requests>=2.25.0" > test_requirements.txt
          zap --dry-run test_requirements.txt

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy

      - name: Run black
        run: black --check --diff zap.py

      - name: Run isort
        run: isort --check-only --diff zap.py

      - name: Run flake8
        run: flake8 zap.py

      - name: Run mypy
        run: mypy zap.py || true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run bandit
        run: bandit -r zap.py

      - name: Check dependencies
        run: safety check

  compatibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        install-method:
          ["pip-install", "pip-install-editable", "build-and-install"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Test installation method
        run: |
          python -m pip install --upgrade pip
          if [ "${{ matrix.install-method }}" = "pip-install" ]; then
            pip install .
          elif [ "${{ matrix.install-method }}" = "pip-install-editable" ]; then
            pip install -e .
          else
            pip install build
            python -m build
            pip install dist/*.whl
          fi
          zap --version
