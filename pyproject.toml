[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zap"
version = "0.1.0"
description = "Smart pip requirements installer"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Jassem Manita", email = "jasemmanita00@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0", 
    "black>=21.0.0",
    "flake8>=3.8.0",
    "isort>=5.0.0",
    "mypy>=0.800",
    "build>=0.7.0",
    "twine>=3.4.0"
]
keywords = ["pip", "requirements", "installer", "package", "management"]

[project.urls]
Homepage = "https://github.com/jassem-manita/zap"
Repository = "https://github.com/jassem-manita/zap"
Issues = "https://github.com/jassem-manita/zap/issues"

[project.scripts]
zap = "src.core:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-dir]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".pytest_cache"
]
